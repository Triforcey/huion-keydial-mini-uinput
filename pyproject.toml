[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "huion-keydial-mini-driver"
version = "1.1.1"
description = "User space driver for Huion Keydial Mini bluetooth device"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
keywords = ["huion", "keydial", "bluetooth", "hid", "driver", "uinput"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Hardware :: Hardware Drivers",
]
dependencies = [
    "bleak>=0.21.1",
    "evdev>=1.6.1",
    "click>=8.1.7",
    "pyyaml>=6.0.1",
    "dbus-next>=0.2.3",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
]
dev = [
    "build",
    "installer"
]

[project.urls]
"Homepage" = "https://github.com/your-username/huion-keydial-mini-uinput"
"Bug Reports" = "https://github.com/your-username/huion-keydial-mini-uinput/issues"
"Source" = "https://github.com/your-username/huion-keydial-mini-uinput"

[project.scripts]
huion-keydial-mini = "huion_keydial_mini.main:main"
keydialctl = "huion_keydial_mini.keydialctl:cli"
create-huion-keydial-uinput-device = "huion_keydial_mini.create_uinput_device:cli"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "hid_parser: HID parser specific tests",
    "combo: Button combo functionality tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
